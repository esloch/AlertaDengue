version: 2


base: &base
  working_directory: ~/repo
  docker:
    - image: continuumio/miniconda3:latest


test: &test
  <<: *base
  steps:
    - checkout
    - setup_remote_docker
    - run:
        name: Install Docker dependencies
        command: |
          apt-get update
          apt-get install gnupg-agent --yes 
          apt install docker.io --yes
    - run:
        name: Install git and LFS
        command: |
          apt-get update
          apt-get install git
          mkdir docker/git
          wget https://github.com/git-lfs/git-lfs/releases/download/v2.10.0/git-lfs-linux-amd64-v2.10.0.tar.gz -O docker/git/git_lfs.tar.gz
          tar -zxf docker/git/git_lfs.tar.gz -C docker/git/
          chmod +x docker/git/install.sh
          ./docker/git/install.sh
          git --version
          git-lfs --version
    - run:
        name: clone Data repo
        command: |
          git lfs install
          git lfs track "*.sql"
          git -c filter.lfs.smudge= -c filter.lfs.required=True clone https://github.com/esloch/Data.git
          #git -c filter.lfs.smudge= -c filter.lfs.required=false pull && git lfs pull
          #git clone https://github.com/esloch/Data.git
    - run:
        name: lista Data
        command: |
          ls -la Data/
    - run:
        name: Rename data file and merge patch
        command: |
          mv Data/ docker/dev_dumps/
          mv docker/dev_dumps/alertademo_data.sql docker/dev_dumps/latest_dengue.sql
          cat ./docker/dev_dumps/patch/notificacao.sql >> docker/dev_dumps/latest_dengue.sql
    - run:
        name: Prepare data file
        command: |
          cat ./docker/dev_dumps/latest_dengue.sql | gzip > ./docker/dev_dumps/latest_dengue.sql.gz
    - run:
        name: Copy env_file as env_staging
        command: cp example_env_file .env_staging
    - run:
        name: Update Conda
        command: |
          conda config --set always_yes True
          conda config --add channels conda-forge
          conda install -n base conda
          conda update --all
          conda install docker-compose make
          # conda env create -f environment-${PYTHON_VERSION}.yml
          # conda install python=${PYTHON_VERSION} -n alertadengue --file requirements-dev.txt
    - run:
        name: lista Data
        command: |
          ls -la Data/
    - run:
        name: make deploy_staging
        command: make deploy_staging
    - run:
        name: Show the exact environment used
        command: |
          source activate alertadengue
          conda list
    - run:
        name: Run Tests
        command: |
          source activate alertadengue
          cd AlertaDengue
          flake8
jobs:
  python37_test:
      <<: *test
      environment:
        - PYTHON_VERSION: 3.7

workflows:
  version: 2
  test:
    jobs:
      - python37_test