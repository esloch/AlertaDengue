name: CI

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7]

    env:
      COMPOSE_FILE: docker/docker-compose.yml
      PYTHON_VERSION: ${{ matrix.python-version }}

    steps:
    - uses: actions/checkout@v2

      #- name: Install Latest Docker
      #run: |
        #curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
        #sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu  $(lsb_release -cs)  stable"
        #sudo apt-get update
        #sudo apt-get install docker-ce

    # - name: Check docker and docker-compose versions
    #   run: |
    #     docker-compose --version
    #     docker --version

    # - name: Git-LFS initialize
    #   run: |
    #     git-lfs --version
    #     git lfs install
    #
    # - name: Clone frontend repository
    #   run: |
    #     git clone https://github.com/esloch/Data.git docker/dev_dumps
    #     ls -la docker/dev_dumps

    # - name: Rename data file and merge patch
    #   run: |
    #     mv docker/dev_dumps/alertademo_data.sql docker/dev_dumps/latest_dengue.sql
    #     cat docker/dev_dumps/patch/notificacao.sql >> docker/dev_dumps/latest_dengue.sql
    #     du -h docker/dev_dumps/

    # - name: Prepare data file
    #   run: |
    #     cat docker/dev_dumps/latest_dengue.sql | gzip > docker/dev_dumps/latest_dengue.sql.gz
    #     echo '' | gzip > docker/dev_dumps/latest_infodengue.sql.gz


    - name: Prepare data file from Dataverser
      run: |
        mkdir -p docker/dev_dumps
        wget https://dataverse.harvard.edu/api/access/datafile/4154429 -O docker/dev_dumps/latest_infodengue.sql.gz
        wget https://dataverse.harvard.edu/api/access/datafile/4154518 -O docker/dev_dumps/latest_dengue.sql.gz

    - name: Copy env_file as env_staging
      run: |
        cp example_env_file .env_staging

    - name: make deploy_staging
      run: make deploy_staging

    - name: Run flake8
      run: make flake8_staging SERVICES_STAGING=staging_web

    - name: Run tests
      run: make test_staging_web SERVICES_STAGING=staging_web

